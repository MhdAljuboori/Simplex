/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainForm.java
 *
 * Created on Nov 26, 2011, 2:53:07 PM
 */
package main;

import OR.Matrix;
import OR.SimplexProblem;
import OR.SolutionList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sun.util.logging.resources.logging;

/**
 *
 * @author mhd
 */
public class MainForm extends javax.swing.JFrame {

    /** Creates new form MainForm */
    public MainForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabC = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblZstatement = new javax.swing.JLabel();
        cbMaxMin = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabSolutions = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnRemoveVar = new javax.swing.JButton();
        btnAddVar = new javax.swing.JButton();
        btnRemoveCondition = new javax.swing.JButton();
        btnAddCondition = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSolve = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        lblSolType = new javax.swing.JLabel();
        lblResult = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        scrollLegalForm = new javax.swing.JScrollPane();
        txtLegalForm = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabConditions = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabB = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tabC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "X1", "X2", "X3", "X4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabC.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jScrollPane2.setViewportView(tabC);

        jLabel1.setText("C =");

        lblZstatement.setText("maxZ = C . X");

        cbMaxMin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Max", "Min" }));
        cbMaxMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaxMinActionPerformed(evt);
            }
        });

        tabTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                " ", "Z", "X1", "X2", "X3", "X4", "RHS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jScrollPane4.setViewportView(tabTable);

        tabSolutions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Z", "X1", "X2", "X3"
            }
        ));
        jScrollPane5.setViewportView(tabSolutions);

        jLabel7.setText("Table :");

        btnRemoveVar.setText("-");
        btnRemoveVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveVarActionPerformed(evt);
            }
        });

        btnAddVar.setText("+");
        btnAddVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVarActionPerformed(evt);
            }
        });

        btnRemoveCondition.setText("-");
        btnRemoveCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveConditionActionPerformed(evt);
            }
        });

        btnAddCondition.setText("+");
        btnAddCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddConditionActionPerformed(evt);
            }
        });

        jLabel4.setText("Variables");

        jLabel6.setText("Conditions");

        btnSolve.setText("Solve");
        btnSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolveActionPerformed(evt);
            }
        });

        lblTime.setText("Time : ?");

        lblSolType.setText("Solution Type : ?");

        lblResult.setText("لا توجد بيانات بعد");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddCondition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddVar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveVar)
                            .addComponent(btnRemoveCondition, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                        .addGap(49, 49, 49))
                    .addComponent(btnSolve, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSolType)
                        .addGap(251, 251, 251)
                        .addComponent(lblResult))
                    .addComponent(lblTime))
                .addGap(382, 382, 382))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddCondition, btnAddVar, btnRemoveCondition, btnRemoveVar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnRemoveVar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSolType))
                            .addComponent(btnAddVar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRemoveCondition, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .addComponent(btnAddCondition, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(btnSolve))
                            .addComponent(lblTime)))
                    .addComponent(lblResult))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddCondition, btnAddVar});

        jLabel3.setText("Solutions :");

        scrollLegalForm.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtLegalForm.setColumns(20);
        txtLegalForm.setEditable(false);
        txtLegalForm.setRows(5);
        txtLegalForm.setTabSize(4);
        txtLegalForm.setText("Legal From:\n\tZ=C.X\nsubjected to :\n\t---------\n \t---------\n\t---------");
        txtLegalForm.setAutoscrolls(false);
        scrollLegalForm.setViewportView(txtLegalForm);

        tabConditions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "X1", "X2", "X3", "X4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabConditions.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jScrollPane1.setViewportView(tabConditions);

        tabB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "b"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabB);

        jLabel5.setText("subjected to : ");

        jLabel2.setText("A = ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblZstatement)
                .addGap(298, 298, 298)
                .addComponent(cbMaxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(jLabel7))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrollLegalForm)))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblZstatement))
                    .addComponent(cbMaxMin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel7)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrollLegalForm, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnAddVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVarActionPerformed
// TODO add your handling code here:
    TableColumn newCol = new TableColumn();
    newCol.setHeaderValue("X" +  (tabConditions.getColumnCount() + 1));
    tabConditions.addColumn(newCol);
    
    newCol = new TableColumn();
    newCol.setHeaderValue("X" +  (tabC.getColumnCount() + 1));
    tabC.addColumn(newCol);
    
    newCol = new TableColumn();
    newCol.setHeaderValue("X" +  (tabSolutions.getColumnCount() + 1));
    tabSolutions.addColumn(newCol);
}//GEN-LAST:event_btnAddVarActionPerformed

private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
// TODO add your handling code here:
    
}//GEN-LAST:event_formComponentShown

private void cbMaxMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaxMinActionPerformed
// TODO add your handling code here:
    lblZstatement.setText(cbMaxMin.getSelectedItem().toString().toLowerCase() + "Z = C . X");
}//GEN-LAST:event_cbMaxMinActionPerformed

private void btnAddConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddConditionActionPerformed
// TODO add your handling code here:
   DefaultTableModel model = (DefaultTableModel) tabConditions.getModel();
   model.addRow(new java.util.Vector<Object>());
   model = (DefaultTableModel) tabB.getModel();
   model.addRow(new java.util.Vector<Object>());
}//GEN-LAST:event_btnAddConditionActionPerformed

private void btnRemoveConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveConditionActionPerformed
   DefaultTableModel model = (DefaultTableModel) tabConditions.getModel();
   int count = tabConditions.getRowCount();
   model.removeRow(count-1);
   model = (DefaultTableModel) tabB.getModel();
   model.removeRow(count-1);
   System.out.println(tabConditions.getRowCount()); 
}//GEN-LAST:event_btnRemoveConditionActionPerformed

private void btnRemoveVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveVarActionPerformed
// TODO add your handling code here:
    int count = tabConditions.getColumnCount();
    tabConditions.getColumnModel().removeColumn(tabConditions.getColumn("X" + (count)));
    tabC.getColumnModel().removeColumn(tabC.getColumn("X" + (count)));
    System.out.println(tabConditions.getColumnCount()); 
}//GEN-LAST:event_btnRemoveVarActionPerformed

private double[][] Vector2doubleArray(Vector<Vector<Double>> a) {
    int n = tabConditions.getColumnCount();
    int m = tabConditions.getRowCount();
    double[][] doubles = new double[m][n];
    for (int i=0;i<m;i++) {
        for (int j=0;j<n;j++)
            doubles[i][j] = a.get(i).get(j);
    }
    return doubles;
}

private Double[][] Vector2DoubleArray(Vector<Vector<Double>> a) {
    int n = tabConditions.getColumnCount();
    int m = tabConditions.getRowCount();
    Double[][] doubles = new Double[m][n];
    for (int i=0;i<m;i++) {
            for (int j=0;j<n;j++)
            doubles[i][j] = a.get(i).get(j);
    }
    return doubles;
}

private double[][] getDataFromTable(JTable table) {
    int n = table.getColumnCount();
    int m = table.getRowCount();
    double[][] doubles = new double[m][n];
    for (int i=0;i<m;i++) {
        for (int j=0;j<n;j++)
            doubles[i][j] = ((Double)table.getValueAt(i, j)).doubleValue();
    }
    return doubles;
}

private static Double[] double2Double(double[] a) {
    
    Double[] doubles = new Double[a.length];
    for (int i=0;i<a.length;i++) {
            doubles[i] = a[i];
    }
    return doubles;
}

private void btnSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolveActionPerformed
// TODO add your handling code here:
    try{
        
    double[][] A = getDataFromTable(tabConditions);

    double[] C = getDataFromTable(tabC)[0];
    
    double[] b = new Matrix(getDataFromTable(tabB)).transpose().getArray()[0];
    
    SimplexProblem problem = new SimplexProblem(SimplexProblem.ProblemType.valueOf(cbMaxMin.getSelectedItem().toString()),
            A, double2Double(C), double2Double(b));
    txtLegalForm.setText(problem.getLegalFormAsText());
    SolutionList list = problem.solveByTableSimplex();
    DefaultTableModel model;
    model = (DefaultTableModel)tabSolutions.getModel();
   
    while (list.getLength() > tabSolutions.getColumnCount()) {
        TableColumn newCol = new TableColumn(model.getColumnCount());
        newCol.setHeaderValue("X" +  (tabSolutions.getColumnCount()));
        tabSolutions.setAutoCreateColumnsFromModel(false);
        tabSolutions.addColumn(newCol);
        model.addColumn("X" +  (tabSolutions.getColumnCount()));
    }
    while (list.getLength() < tabSolutions.getColumnCount()) {
        tabSolutions.removeColumn(tabSolutions.getColumn("X" + (tabSolutions.getColumnCount()-1)));
    }
   
    if (model.getRowCount() >= 1) {
        model.setRowCount(0);
    }
    for (int i=0;i<list.size();i++) {
        Double[] row = list.get(i);
        model.addRow(row);
    }
    
    // adding table
    String[] names = new String[list.getLength()+2];
    names[0] = "Basic";
    names[1] = "Z";
    names[names.length-1]="RHS";
    for (int i=2;i<names.length-1;i++)
        names[i] = "X" + i;
    Matrix allTable  = list.table.getTable();
    model = new DefaultTableModel(names, allTable.getRowDimension());
    for (int i=0;i<allTable.getRowDimension();i++) {
        for (int j=0;j<allTable.getColumnDimension();j++)
            model.setValueAt(allTable.get(i, j), i, j);
    }
    model.setValueAt("Z", 0, 0);
    for (int i=1 ;i<allTable.getRowDimension();i++){
        int num = (int)allTable.get(i, 0);
        String name = "X" + num;
        model.setValueAt(name, i, 0);
    }
    tabTable.setModel(model);
    lblTime.setText("Time : \n" + list.time + " ns");
    lblSolType.setText("Solution Type : " + list.getType());
    if (list.getType() == SolutionList.SolutionType.InfinityOfOptimalSolutions)
        lblResult.setText("الحل تركيب خطي من الحلول التالية");
    else if (list.getType() == SolutionList.SolutionType.Unlimited)
        lblResult.setText("لا توجد حلول");
    else if (list.getType() == SolutionList.SolutionType.OneOptimalSolution)
        lblResult.setText("حل وحيد أمثلي");
    }
    catch (NullPointerException e) {
        JOptionPane.showMessageDialog(this, "Wrong Input !! .. did you enter all the boxes ? .. any Boxes under edit now ?");
    }
    
    
}//GEN-LAST:event_btnSolveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCondition;
    private javax.swing.JButton btnAddVar;
    private javax.swing.JButton btnRemoveCondition;
    private javax.swing.JButton btnRemoveVar;
    private javax.swing.JButton btnSolve;
    private javax.swing.JComboBox cbMaxMin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblSolType;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblZstatement;
    private javax.swing.JScrollPane scrollLegalForm;
    private javax.swing.JTable tabB;
    private javax.swing.JTable tabC;
    private javax.swing.JTable tabConditions;
    private javax.swing.JTable tabSolutions;
    private javax.swing.JTable tabTable;
    private javax.swing.JTextArea txtLegalForm;
    // End of variables declaration//GEN-END:variables
}
